package {{.Package}}

import "context"

// Code generated by github.com/mavolin/repogen. DO NOT EDIT.

type (
    Repository interface {
{{- if .Base }}
    {{- range .Base }}
        {{.}}
    {{- end }}
{{ end }}

    {{- range .Entities }}
        {{.Repository}}
    {{- end }}

{{- if .Extra }}
    {{ range .Extra }}
        {{.}}
    {{- end }}
{{- end }}
    }

{{- range .Entities }}

    {{.Repository}} interface {
{{- if $.Base }}
    {{- range $.Base }}
        {{.}}
    {{- end }}
{{ end }}

    {{- if .Create }}
        Create{{.Singular}}(ctx context.Context
            {{- if ne .CreatedByType "" }}, createdBy {{.CreatedByType}}{{ end -}}
            , data {{.Singular}}Setter) (
                {{- if eq (len .PKs) 1 -}}{{(index .PKs 0).Name}} {{(index .PKs 0).Type}}, {{ end -}}
                err error)
    {{- end }}
    {{- if .Get}}
        {{.Singular}}(ctx context.Context {{- range .PKs }}, {{.Name}} {{.Type}}{{ end }}) (res *{{.Singular}}, err error)
    {{- end }}
    {{- if .Search }}
        {{.Plural}}(ctx context.Context, search {{.SearchType}}) (res []*{{.Singular}}, err error)
    {{- end }}
    {{- if .Edit }}
        Edit{{.Singular}}(ctx context.Context
            {{- range .PKs }}, {{.Name}} {{.Type}}{{ end }}
            {{- if ne .UpdatedByType "" }}, updatedBy {{.UpdatedByType}}{{ end -}}
            , data {{.Singular}}Setter) (err error)
    {{- end }}
    {{- if .Delete }}
        Delete{{.Singular}}(ctx context.Context
            {{- range .PKs }}, {{.Name}} {{.Type}}{{ end -}}
            {{- if ne .DeletedByType "" }}, deletedBy {{.DeletedByType}}{{ end }}) (err error)
    {{- end }}
    }
{{- end }}
)
